import{_ as e,c as a,o as r,a as t}from"./app.0db880d1.js";const f=JSON.parse('{"title":"什么是 QD?","description":"","frontmatter":{},"headers":[{"level":2,"title":"特性","slug":"特性","link":"#特性","children":[]},{"level":2,"title":"如何部署","slug":"如何部署","link":"#如何部署","children":[]},{"level":2,"title":"如何使用","slug":"如何使用","link":"#如何使用","children":[]},{"level":2,"title":"如何更新","slug":"如何更新","link":"#如何更新","children":[]},{"level":2,"title":"讨论","slug":"讨论","link":"#讨论","children":[]}],"relativePath":"zh_CN/guide/what-is-qd.md"}'),i={name:"zh_CN/guide/what-is-qd.md"},l=t('<h1 id="什么是-qd" tabindex="-1">什么是 QD? <a class="header-anchor" href="#什么是-qd" aria-hidden="true">#</a></h1><p>QD 是 一个 基于 HAR 编辑器和 Tornado 服务端的 HTTP 定时任务自动执行 Web 框架。</p><h2 id="特性" tabindex="-1">特性 <a class="header-anchor" href="#特性" aria-hidden="true">#</a></h2><ul><li><strong>基于Har</strong>: 仅需上传通过抓包得到的 Har, 即可制作框架所需的 HTTP 任务模板。</li><li><strong>Tornado 服务端</strong>: 使用 Tornado 作为服务端, 以实现异步响应前端和发起 HTTP 请求。</li><li><strong>API &amp; 插件支持</strong>: 内置多种 API 和过滤器用于模板制作, 后续将提供自定义插件支持。</li><li><strong>开源</strong>: QD 是一个基于 MIT 许可证的开源项目。</li></ul><h2 id="如何部署" tabindex="-1">如何部署 <a class="header-anchor" href="#如何部署" aria-hidden="true">#</a></h2><p>请参考: <a href="./deployment.html">部署</a></p><h2 id="如何使用" tabindex="-1">如何使用 <a class="header-anchor" href="#如何使用" aria-hidden="true">#</a></h2><p>请参考: <a href="./how-to-use.html">如何使用</a></p><h2 id="如何更新" tabindex="-1">如何更新 <a class="header-anchor" href="#如何更新" aria-hidden="true">#</a></h2><p>请参考: <a href="./update.html">更新</a></p><h2 id="讨论" tabindex="-1">讨论 <a class="header-anchor" href="#讨论" aria-hidden="true">#</a></h2><ul><li>Github: <a href="https://github.com/qiandao-today/qiandao/issues" target="_blank" rel="noreferrer">问题反馈</a></li><li>Github: <a href="https://github.com/qiandao-today/qiandao/discussions" target="_blank" rel="noreferrer">讨论</a></li></ul>',12),n=[l];function d(h,s,o,c,_,u){return r(),a("div",null,n)}const g=e(i,[["render",d]]);export{f as __pageData,g as default};
